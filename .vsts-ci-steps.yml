parameters:
  name: ''
  queue: ''

phases:
- phase: ${{ parameters.name }}
  queue: ${{ parameters.queue }}
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      version: 2.1.301
    displayName: Install .NET Core

  # This script runs both via bash (macOS/Linux) and cmd (Windows).
  # Keep it both valid bash and batch or break it out conditionally.
  - script: |
      echo System Environment
      set
      echo .NET Core Info
      dotnet --info
    displayName: Dump Environment

  - task: DotNetCoreCLI@2
    inputs:
      command: restore
    displayName: Restore

  - task: DotNetCoreCLI@2
    inputs:
      arguments: '--no-restore'
    displayName: Build

  - task: DotNetCoreCLI@2
    inputs:
      command: test
      projects: '**\*.Tests.csproj'
    continueOnError: true
    displayName: Run xUnit Tests

  - task: MSBuild@1
    inputs:
      solution: src\Xamarin.MSBuild.Tooling.Tests\Xamarin.MSBuild.Tooling.Tests.csproj
      msbuildArguments: '/restore /t:Test'
    continueOnError: true
    displayName: Run Manual MSBuild.Tooling Tests

  - task: DotNetCoreCLI@2
    inputs:
      command: pack
      nobuild: true
    condition: and(succeeded(), eq(variables['agent.os'], 'darwin'))
    displayName: Pack

  - task: PublishBuildArtifacts@1
    inputs:
      ArtifactName: Artifacts
    condition: and(succeeded(), eq(variables['agent.os'], 'darwin'))
    displayName: Publish Artifacts